Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\run_training.py", line 133, in <module>
    main(args.lp, args.rf)
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\run_training.py", line 34, in main
    run_training(config=config, mode='pretrain', run_folder=run_folder)
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\run_training.py", line 112, in run_training
    metrics = trainer.train()
              ^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\training\trainer.py", line 112, in train
    train_loss = self.train_epoch()
                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\training\trainer.py", line 89, in train_epoch
    for batch in self.train_loader:
  File "C:\Users\cunn2\miniconda3\envs\sms\Lib\site-packages\torch\utils\data\dataloader.py", line 630, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\miniconda3\envs\sms\Lib\site-packages\torch\utils\data\dataloader.py", line 1344, in _next_data
    return self._process_data(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\miniconda3\envs\sms\Lib\site-packages\torch\utils\data\dataloader.py", line 1370, in _process_data
    data.reraise()
  File "C:\Users\cunn2\miniconda3\envs\sms\Lib\site-packages\torch\_utils.py", line 706, in reraise
    raise exception
TypeError: Caught TypeError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "C:\Users\cunn2\miniconda3\envs\sms\Lib\site-packages\torch\utils\data\_utils\worker.py", line 309, in _worker_loop
    data = fetcher.fetch(index)  # type: ignore[possibly-undefined]
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\miniconda3\envs\sms\Lib\site-packages\torch\utils\data\_utils\fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\miniconda3\envs\sms\Lib\site-packages\torch\utils\data\_utils\fetch.py", line 52, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\data\dataloader.py", line 91, in __getitem__
    negative_idx = self.negative_enhance_sample(idx)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\data\dataloader.py", line 73, in negative_enhance_sample
    negative = self.formatter(self.loaded_data[new_idx])
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\data\formatter.py", line 45, in __call__
    note_array = self.make_piano_roll(note_array)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\cunn2\OneDrive\DSML\Project\thesis-repo\sms\exp1\data\formatter.py", line 118, in make_piano_roll
    quantized = self.quantize(note_array, steps_per_bar)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: InputFormatter.quantize() takes 2 positional arguments but 3 were given